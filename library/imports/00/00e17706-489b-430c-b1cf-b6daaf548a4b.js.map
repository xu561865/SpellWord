{"version":3,"sources":["../../../../../assets/Script/Views/assets/Script/Views/fourTouchNodesView.js"],"names":["cc","Class","extends","Component","properties","labels","default","type","Label","touchNodes","Node","_lineStartNode","_lineEndNode","_letters","_letterArr","onLoad","node","on","EventType","TOUCH_START","event","console","log","location","getLocation","pos","convertToNodeSpaceAR","forEach","touchNode","index","getBoundingBox","contains","push","string","bind","TOUCH_UP","TOUCH_MOVE","word","join","Event","EventCustom","detail","dispatchEvent","start","setLetters","__letters","reload","Array","length","label"],"mappings":"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","file":"fourTouchNodesView.js","sourceRoot":"../../../../../assets/Script/Views","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n\n        labels: {\n            default: [],\n            type: cc.Label\n        },\n\n        touchNodes: {\n            default: [],\n            type: cc.Node,\n        },\n\n        _lineStartNode: null,\n        _lineEndNode: null,\n        _letters: null,\n        _letterArr: [],\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.node.on(cc.Node.EventType.TOUCH_START, function (event) {\n            console.log(\"touch start\");\n\n            this._lineStartNode = null;\n            this._lineEndNode = null;\n            this._letterArr = [];\n\n            let location = event.getLocation();\n            let pos = this.node.convertToNodeSpaceAR(location);\n\n            this.touchNodes.forEach(function (touchNode, index) {\n                if(touchNode.getBoundingBox().contains(pos))\n                {\n                    this._lineStartNode = touchNode;\n                    this._letterArr.push(this.labels[index].string);\n                }\n            }.bind(this));\n        }, this);\n\n\n        this.node.on(cc.Node.EventType.TOUCH_UP, function (event) {\n            console.log(\"touch up\");\n            this._lineStartNode = null;\n            this._lineEndNode = null;\n            this._letterArr = [];\n        }, this);\n\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, function (event) {\n            console.log(\"touch move\");\n            if(this._lineStartNode && !this._lineEndNode)\n            {\n                let location = event.getLocation();\n                let pos = this.node.convertToNodeSpaceAR(location);\n\n                this.touchNodes.forEach(function (touchNode, index) {\n                    if(touchNode.getBoundingBox().contains(pos))\n                    {\n                        if(touchNode != this._lineStartNode)\n                        {\n                            this._lineEndNode = touchNode;\n                            this._letterArr.push(this.labels[index].string);\n\n                            let word = this._letterArr.join('');\n                            let event = new cc.Event.EventCustom('match_word', true);\n                            event.detail = {word: word};\n                            this.node.dispatchEvent(event);\n                        }\n                    }\n                }.bind(this));\n            }\n        }, this);\n    },\n\n    start () {\n\n    },\n\n    setLetters (__letters) {\n        this._letters = __letters;\n        this.reload();\n    },\n\n    reload () {\n        if((this._letters instanceof Array) && (this._letters.length >= this.labels.length))\n        {\n            this.labels.forEach(function (label, index) {\n                label.string = this._letters[index];\n            }.bind(this));\n        }\n    },\n\n    // update (dt) {},\n});\n"]}