{"version":3,"sources":["../../../../assets/Script/assets/Script/mainScene.js"],"names":["cc","Class","extends","Component","properties","twoTouchNodesPrefab","Prefab","threeTouchNodesPrefab","fourTouchNodesPrefab","wordPrefab","touchNode","Node","content","lblPass","Label","_words","_wordArr","_passWordArr","onLoad","node","active","console","log","on","event","word","detail","length","forEach","__word","checkAllWordsPassed","i","showPassedWord","bind","setWords","reload","split","letterArr","push","uniq","touchNodePrefab","touchNodeName","instantiate","addChild","touchNodeView","getComponent","setLetters","wordNode","wordView","setWord","array","temp","r","len","val","type","indexOf","__words","update","dt","onButtonTapped"],"mappings":"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","file":"mainScene.js","sourceRoot":"../../../../assets/Script","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        twoTouchNodesPrefab: cc.Prefab,\n        threeTouchNodesPrefab: cc.Prefab,\n        fourTouchNodesPrefab: cc.Prefab,\n        wordPrefab: cc.Prefab,\n\n        touchNode: cc.Node,\n        content: cc.Node,\n        lblPass: cc.Label,\n\n        _words: null,\n        _wordArr: [],\n        _passWordArr: [],\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.lblPass.node.active = false;\n\n        console.log(\"main scene onload\");\n        this.node.on(\"match_word\", function (event) {\n            let word = event.detail.word;\n\n            if(this._wordArr.length > 0)\n            {\n                this._wordArr.forEach(function (__word) {\n                    if(word == __word)\n                    {\n                        if(this.checkAllWordsPassed())\n                        {\n                            this.lblPass.node.active = true;\n                            return;\n                        }\n\n                        if(this._passWordArr.length > 0)\n                        {\n                            for(let i = 0; i < this._passWordArr.length; ++i)\n                            {\n                                if(this._passWordArr[i] != word)\n                                {\n                                    this.showPassedWord(word);\n                                }\n                            }\n                        }\n                        else\n                        {\n                            this.showPassedWord(word);\n                        }\n                    }\n                }.bind(this));\n            }\n        }.bind(this));\n\n        // test\n        this.setWords(\"in,ok,no\");\n        //\n    },\n\n    reload: function () {\n        if(typeof this._words === \"string\")\n        {\n            this._wordArr = this._words.split(',');\n            let letterArr = [];\n            this._wordArr.forEach(function (word) {\n                for(let i = 0; i < word.length; ++i)\n                {\n                    letterArr.push(word[i]);\n                }\n            });\n\n            letterArr = this.uniq(letterArr);\n\n            let touchNodePrefab = null;\n            let touchNodeName = \"\";\n            switch(letterArr.length)\n            {\n                case 2:\n                    touchNodePrefab = this.twoTouchNodesPrefab;\n                    touchNodeName = \"twoTouchNodesView\";\n\n                    break;\n\n                case 3:\n                    touchNodePrefab = this.threeTouchNodesPrefab;\n                    touchNodeName = \"threeTouchNodesView\";\n\n                    break;\n\n                case 4:\n                    touchNodePrefab = this.fourTouchNodesPrefab;\n                    touchNodeName = \"fourTouchNodesView\";\n\n                    break;\n\n                default:\n                    break;\n            }\n\n            if(touchNodePrefab && touchNodeName != \"\")\n            {\n                let touchNode = cc.instantiate(touchNodePrefab);\n                if(touchNode)\n                {\n                    this.touchNode.addChild(touchNode);\n                    let touchNodeView = touchNode.getComponent(touchNodeName);\n                    if(touchNodeView)\n                    {\n                        touchNodeView.setLetters(letterArr);\n                    }\n                }\n            }\n\n        }\n    },\n\n    showPassedWord: function (word) {\n        let wordNode = cc.instantiate(this.wordPrefab);\n        if(wordNode)\n        {\n            this.content.addChild(wordNode);\n            let wordView = wordNode.getComponent(\"wordView\");\n            if(wordView)\n            {\n                wordView.setWord(word);\n                this._passWordArr.push(word);\n            }\n        }\n    },\n\n    checkAllWordsPassed: function () {\n        return this._passWordArr.length >= this._wordArr.length;\n    },\n\n    uniq: function (array){\n        let  temp = {}, r = [], len = array.length, val, type;\n        for (let i = 0; i < len; i++) {\n            val = array[i];\n            type = typeof val;\n            if (!temp[val]) {\n                temp[val] = [type];\n                r.push(val);\n            } else if (temp[val].indexOf(type) < 0) {\n                temp[val].push(type);\n                r.push(val);\n            }\n        }\n        return r;\n    },\n\n    setWords: function (__words) {\n        this._words = __words;\n        this.reload();\n    },\n\n    // called every frame\n    update: function (dt) {\n\n    },\n\n    onButtonTapped: function () {\n        console.log(\"tttttt\");\n    },\n});\n"]}